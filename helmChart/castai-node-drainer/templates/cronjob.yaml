apiVersion: batch/v1
kind: CronJob
metadata:
  name: castai-node-drainer
  namespace: castai-agent
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  timeZone: "{{ .Values.cronjob.timeZone }}"
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          serviceAccountName: castai-node-drainer
          restartPolicy: Never
          terminationGracePeriodSeconds: 60
          tolerations:
          - key: "CriticalAddonsOnly"
            operator: "Equal"
            value: "true"
            effect: "NoSchedule"
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
          - name: castai-node-drainer
            image: "{{ .Values.container.image }}:{{ .Values.container.tag }}"
            env:
            - name: DELAY_AFTER_READY
              value: "{{ .Values.env.DELAY_AFTER_READY }}"
            - name: CRITICAL_WORKLOADS
              value: "{{ .Values.env.CRITICAL_WORKLOADS }}"
            - name: MIN_READY_NODES
              value: "{{ .Values.env.MIN_READY_NODES }}"
            - name: TOTAL_WAIT_CYCLES
              value: "{{ .Values.env.TOTAL_WAIT_CYCLES }}"
            - name: STARTUP_SLEEP_TIME
              value: "{{ .Values.env.STARTUP_SLEEP_TIME }}"
            - name: DELAY_WAIT_PENDING_PODS
              value: "{{ .Values.env.DELAY_WAIT_PENDING_PODS }}"
            - name: MIN_NODE_AGE_DAYS
              value: "{{ .Values.env.MIN_NODE_AGE_DAYS }}"
            - name: NODE_DRAIN_TIMEOUT
              value: "{{ .Values.env.NODE_DRAIN_TIMEOUT }}"
            - name: LAST_RUN
              value: "{{ .Values.env.LAST_RUN }}"
            resources:
              limits:
                memory: "{{ .Values.container.resources.limits.memory }}"
              requests:
                cpu: "{{ .Values.container.resources.requests.cpu }}"
                memory: "{{ .Values.container.resources.requests.memory }}"
